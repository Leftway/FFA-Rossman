arrange(Store,week)
train.wk <- distinct(train[,c("Store","week","sales.wk")])
train.wk <-
train.wk %>%
group_by(Store) %>%
mutate(
sales.wk_gr = sales.wk / lag(sales.wk) - 1,
sales.wk_mom = sales.wk / lag(sales.wk, 53) - 1,
sales.wk_d = sales.wk - lag(sales.wk)
) %>%
ungroup()
sales.wk_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk))
sales.wk_plot + geom_density()
sales.wk_gr_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_gr))
sales.wk_gr_plot + geom_density()
sales.wk_mom_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_mom))
sales.wk_mom_plot + geom_density()
sales.wk_d_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_d))
sales.wk_d_plot + geom_density()
mod1 <- lm(Sales ~ factor(SchoolHoliday) + factor(StateHoliday), data = train)
train1 <- train %>% group_by()
summary(mod1)
#postive skew of Sales plot
p1 <- ggplot(data = train,
mapping = aes(x = Sales))
p1 + geom_density()
#postive skew of quarter revenues by store
p2 <- ggplot(data = q,
mapping = aes(x = revtq))
sales.wk_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk))
sales.wk_plot + geom_density()
sales.wk_gr_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_gr))
sales.wk_gr_plot + geom_density()
sales.wk_mom_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_mom))
sales.wk_mom_plot + geom_density()
sales.wk_d_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_d))
sales.wk_d_plot + geom_density()
train.wk <-
train.wk %>%
group_by(Store) %>%
mutate(
sales.wk_gr = sales.wk / lag(sales.wk) - 1,
sales.wk_mom = sales.wk / lag(sales.wk, 4) - 1,
sales.wk_d = sales.wk - lag(sales.wk)
) %>%
ungroup()
sales.wk_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk))
sales.wk_plot + geom_density()
sales.wk_gr_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_gr))
sales.wk_gr_plot + geom_density()
sales.wk_mom_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_mom))
sales.wk_mom_plot + geom_density()
sales.wk_d_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_d))
sales.wk_d_plot + geom_density()
View(train)
View(train)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
View(train)
View(train)
train <- train %>%
group_by(Store,week) %>%
mutate(sales.wk = sum(Sales,na.rm = TRUE)) %>%
ungroup() %>%
arrange(Store,week,year)
#group revenues by quarter
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
#group revenues by quarter
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
#group revenues by quarter
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
train <- train %>%
group_by(Store,year,week) %>%
mutate(sales.wk = sum(Sales,na.rm = TRUE)) %>%
ungroup() %>%
arrange(Store,year,week)
train.wk <- distinct(train[,c("Store","year","week","sales.wk")])
train.wk <-
train.wk %>%
group_by(Store,year) %>%
mutate(
sales.wk_gr = sales.wk / lag(sales.wk) - 1,
sales.wk_mom = sales.wk / lag(sales.wk, 4) - 1,
sales.wk_d = sales.wk - lag(sales.wk)
) %>%
ungroup()
View(train.wk)
View(train.wk)
sales.wk_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk))
sales.wk_plot + geom_density()
sales.wk_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk))
sales.wk_plot + geom_density()
sales.wk_gr_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_gr))
sales.wk_gr_plot + geom_density()
sales.wk_mom_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_mom))
sales.wk_mom_plot + geom_density()
sales.wk_d_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_d))
sales.wk_d_plot + geom_density()
View(test)
View(test)
pacman::p_load(tidyverse,
ggplot2,
lubridate,
plotly,
kableExtra,
Knitr,
dplyr)
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
#group revenues by quarter
merge.df <- train + test
#group revenues by quarter
merge.df <- data.frame(train + test)
#group revenues by quarter
merge.df <- rowbind(train,test)
#group revenues by quarter
merge.df <- rbind(train,test)
View(test)
View(train)
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
#group revenues by quarter
merge.df <- rbind(train,test[,-1])
#group revenues by quarter
test<-test[,-1]
View(train)
View(train)
View(test)
View(test)
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
train <- train %>%
group_by(Store,year,week) %>%
mutate(sales.wk = sum(Sales,na.rm = TRUE)) %>%
ungroup() %>%
arrange(Store,year,week)
train.wk <- distinct(train[,c("Store","year","week","sales.wk")])
train.wk <-
train.wk %>%
group_by(Store,year) %>%
mutate(
sales.wk_gr = sales.wk / lag(sales.wk) - 1,
sales.wk_mom = sales.wk / lag(sales.wk, 4) - 1,
sales.wk_d = sales.wk - lag(sales.wk)
) %>%
ungroup()
sales.wk_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk))
sales.wk_plot + geom_density()
sales.wk_gr_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_gr))
sales.wk_gr_plot + geom_density()
sales.wk_mom_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_mom))
sales.wk_mom_plot + geom_density()
sales.wk_d_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_d))
sales.wk_d_plot + geom_density()
View(test)
View(test)
View(store)
View(store)
View(train)
View(train.wk)
View(train.wk)
train.df <- merge(train, train.wk, by = c("Store, year, week, sales.wk"))
train.df <- merge(train, train.wk, by = c("Store, year, week, sales.wk"))
sales.wk_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk))
sales.wk_plot + geom_density()
sales.wk_gr_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_gr))
sales.wk_gr_plot + geom_density()
sales.wk_mom_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_mom))
sales.wk_mom_plot + geom_density()
sales.wk_d_plot <- ggplot(data = train.wk,
mapping = aes(x = sales.wk_d))
sales.wk_d_plot + geom_density()
count(test, id, group_by(store))
test %>% group_by(Store) %>% count(test,id)
test %>% group_by(Store) %>% count(id)
test %>% group_by(Store) %>% count(test$id)
test %>% group_by(Store) %>% count(Id)
counttotal<-test %>% group_by(Store) %>% count(Id)
View(counttotal)
counttotal<-test %>% group_by(Store) %>% count(Id)
counttotal<-test %>% group_by(Store) %>% count(Id)
counttotal <-test %>% group_by(Store) %>% count(Id)
counttotal <-test %>% group_by(Store)
counttotal <-filter(test, c(Store,Id)) %>% group_by(Store)
counttotal <- test.filter(Store,Id) %>% group_by(Store)
counttotal <- filter(Store,Id) %>% group_by(Store)
counttotal <- filter(test,Store,Id)
View(counttotal)
counttotal <- filter(test,c(Store,Id))
counttotal <- filter(test,c(Store,Id))
counttotal <- test[,c(Store,Id)]
counttotal <- test[,c("Store","Id")]
counttotal <- counttotal %>% group_by(Store) %>% count(Id)
counttotal <- counttotal %>% group_by(Store) %>% count(Id)
counttotal <- test[,c("Store","Id")]
counttotal <- counttotal %>% group_by(Store) %>% count(distinct(Id))
counttotal <- counttotal %>% group_by(Store) %>% count(distinct(Id))
summary(test)
countotal %>%
group_by(Store) %>%
summarise(count = n_distinct(Id))
counttotal %>%
group_by(Store) %>%
summarise(count = n_distinct(Id))
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
View(store)
View(train)
View(test)
View(train)
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
store <- store %>% mutate_at(store$CompetitionOpenSinceYear, funs(replace(.,is.na(.), median(CompetitionOpenSinceYear,na.rm = TRUE))))
pacman::p_load(tidyverse,
ggplot2,
lubridate,
plotly,
kableExtra,
Knitr,
dplyr)
store <- store %>% mutate_at(store$CompetitionOpenSinceYear, funs(replace(.,is.na(.), median(CompetitionOpenSinceYear,na.rm = TRUE))))
store <- store %>% mutate_at(store$CompetitionOpenSinceYear, funs(replace(.,is.na(.), median(CompetitionOpenSinceYear,na.rm = TRUE))))
store <- store %>% mutate_at(store$CompetitionOpenSinceYear, funs(replace(.,is.na(.), median("CompetitionOpenSinceYear",na.rm = TRUE))))
median(store$CompetitionOpenSinceYear)
median(store$CompetitionOpenSinceYear,na.rm=TRUE)
store <- store %>% mutate_at(store$CompetitionOpenSinceYear, funs(replace(.,is.na(.), median(store$CompetitionOpenSinceYear,na.rm = TRUE))))
class(store$CompetitionOpenSinceYear)
store[,"CompeititionOpenSinceYear"][is.na(store[,"CompeititionOpenSinceYear"])] <- median(store$CompetitionOpenSinceYear,na.rm=TRUE)
store[,"CompetitionOpenSinceYear"][is.na(store[,"CompeititionOpenSinceYear"])] <- median(store$CompetitionOpenSinceYear,na.rm=TRUE)
store[,"CompetitionOpenSinceYear"][is.na(store[,"CompeititionOpenSinceYear"])] <- median(store$CompetitionOpenSinceYear,na.rm=TRUE)
store[,CompetitionOpenSinceYear][is.na(store[,"CompeititionOpenSinceYear"])] <- median(store$CompetitionOpenSinceYear,na.rm=TRUE)
store[,"CompetitionOpenSinceYear"][is.na(store[,"CompeititionOpenSinceYear"])] <- median(store$CompetitionOpenSinceYear,na.rm=TRUE)
store[,"CompetitionOpenSinceYear"]
store[,"CompetitionOpenSinceYear"][is.na(store[,"CompetitionOpenSinceYear"])] <- median(store$CompetitionOpenSinceYear,na.rm=TRUE)
store[,"CompetitionOpenSinceMonth"][is.na(store[,"CompetitionOpenSinceMonth"])] <- median(store$CompetitionOpenSinceMonth,na.rm=TRUE)
store[,"CompetitionOpenSinceYear"][is.na(store[,"CompetitionOpenSinceYear"])] <- median(store$CompetitionOpenSinceYear,na.rm=TRUE)
store[,"Promo2SinceWeek"][is.na(store[,"Promo2SinceWeek"])] <- 0
store[,"Promo2SinceYear"][is.na(store[,"Promo2SinceYear"])] <- 0
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
store <- read.csv("store.csv", stringsAsFactors = F)
store <- store %>%
mutate(CompetitionOpenSinceMonth=ifelse(is.na(CompetitionOpenSinceMonth),median(CompetitionOpenSinceMonth,na.rm=T), CompetitionOpenSinceMonth),
CompetitionOpenSinceYear=ifelse(is.na(CompetitionOpenSinceYear),median(CompetitionOpenSinceYear,na.rm=T), CompetitionOpenSinceYear),
Promo2SinceYear=ifelse(is.na(Promo2SinceYear),0, Promo2SinceYear),
Promo2SinceWeek=ifelse(is.na(Promo2SinceWeek),0, Promo2SinceWeek))
View(test)
View(test)
View(train)
View(test)
View(store)
train.df <- merge(train, store, by = "Store")
View(train.df)
train.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
#cleaning of missing data in store.csv
store <- store %>%
mutate(CompetitionOpenSinceMonth=ifelse(is.na(CompetitionOpenSinceMonth),median(CompetitionOpenSinceMonth,na.rm=T), CompetitionOpenSinceMonth),
CompetitionOpenSinceYear=ifelse(is.na(CompetitionOpenSinceYear),median(CompetitionOpenSinceYear,na.rm=T), CompetitionOpenSinceYear),
Promo2SinceYear=ifelse(is.na(Promo2SinceYear),0, Promo2SinceYear),
Promo2SinceWeek=ifelse(is.na(Promo2SinceWeek),0, Promo2SinceWeek))
train.df <- merge(train, store, by = "Store")
train.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
#select the first average sales data for each store-type-assort
train.avg.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
slice(1) %>%
select(Store,Dept,store_avg) %>%
ungroup()
train.avg.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
slice(1) %>%
select(Store,StoreType,store_avg) %>%
ungroup()
#select the first average sales data for each store-type-assort
train.avg.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
slice(1) %>%
select(Store,StoreType,Assortment,store_avg) %>%
ungroup()
train.test <- left_join(test, train.avg.df)
View(train.test)
train.df$Daily_mult <- train.df$sales / train.df$store_avg
train.df$Daily_mult <- train.df$Sales / train.df$store_avg
df[!is.finite(train.df$Daily_mult),]$Daily_mult <- NA
df[!is.finite(train.df$Daily_mult),]$Daily_mult <- NA
train.df[!is.finite(train.df$Daily_mult),]$Daily_mult <- NA
train.df[!is.finite(train.df$Daily_mult),]$Daily_mult <- NA
#calculate mean by daily-store-storetype-assort and distribute to train.test
train.df <- train.df %>%
group_by(Store,StoreType,Assortment,DayOfWeek) %>%
mutate(naive_mean=mean(Sales, rm.na=T)) %>%
ungroup()
train_wm <- train.df %>%
group_by(Store,StoreType,Assortment,DayOfWeek) %>%
slice(1) %>%
ungroup() %>%
select(Store,StoreType,Assortment,DayOfWeek,naive_mean)
train.test <- train.test %>% arrange(Store,StoreType,Assortment,DayOfWeek)
train.test <- left_join(train.test,train_wm)
View(train.test)
table(is.na(df_test$naive_mean))
table(is.na(train.test$naive_mean))
train.df %>%
group_by(DayOfWeek, Store) %>%
mutate(sales=mean(Sales)) %>%
slice(1) %>%
ungroup() %>%
ggplot(aes(y=sales, x=day, color=factor(Store))) +
geom_line() + xlab("Day") + ylab("Sales for Store (StoreType,Assortment)") +
theme(legend.position = "none")
train.df %>%
group_by(DayOfWeek, Store) %>%
mutate(sales=mean(Sales)) %>%
slice(1) %>%
ungroup() %>%
ggplot(aes(y=Sales, x=DayOfWeek, color=factor(Store))) +
geom_line() + xlab("Day") + ylab("Sales for Store (StoreType,Assortment)") +
theme(legend.position = "none")
# Import train.csv, test.csv and store.csv
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
# Import train.csv, test.csv and store.csv
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
#cleaning of missing data in store.csv
store <- store %>%
mutate(CompetitionOpenSinceMonth=ifelse(is.na(CompetitionOpenSinceMonth),median(CompetitionOpenSinceMonth,na.rm=T), CompetitionOpenSinceMonth),
CompetitionOpenSinceYear=ifelse(is.na(CompetitionOpenSinceYear),median(CompetitionOpenSinceYear,na.rm=T), CompetitionOpenSinceYear),
Promo2SinceYear=ifelse(is.na(Promo2SinceYear),0, Promo2SinceYear),
Promo2SinceWeek=ifelse(is.na(Promo2SinceWeek),0, Promo2SinceWeek))
train.df <- merge(train, store, by = "Store")
#calculate average sales by store-type-assort
train.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
train.avg.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
slice(1) %>%
select(Store,StoreType,Assortment,store_avg) %>%
ungroup()
train.test <- left_join(test, train.avg.df)
#calculate multipliers based on store_avg (and removing NaN and Inf)
train.df$Daily_mult <- train.df$Sales / train.df$store_avg
train.df[!is.finite(train.df$Daily_mult),]$Daily_mult <- NA
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
#cleaning of missing data in store.csv
store <- store %>%
mutate(CompetitionOpenSinceMonth=ifelse(is.na(CompetitionOpenSinceMonth),median(CompetitionOpenSinceMonth,na.rm=T), CompetitionOpenSinceMonth),
CompetitionOpenSinceYear=ifelse(is.na(CompetitionOpenSinceYear),median(CompetitionOpenSinceYear,na.rm=T), CompetitionOpenSinceYear),
Promo2SinceYear=ifelse(is.na(Promo2SinceYear),0, Promo2SinceYear),
Promo2SinceWeek=ifelse(is.na(Promo2SinceWeek),0, Promo2SinceWeek))
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
View(store)
train.df <- merge(train, store, by = "Store")
#calculate average sales by store-type-assort
train.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
#select the first average sales data for each store-type-assort
train.avg.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
slice(1) %>%
select(Store,StoreType,Assortment,store_avg) %>%
ungroup()
train.test <- left_join(test, train.avg.df)
train.df$Daily_mult <- train.df$Sales / train.df$store_avg
train.df[!is.finite(train.df$Daily_mult),]$Daily_mult <- NA
View(train.df)
train.df <- train.df %>%
group_by(Store,StoreType,Assortment,week,DayOfWeek) %>%
mutate(naive_mean=mean(Sales, rm.na=T)) %>%
ungroup()
train_wm <- train.df %>%
group_by(Store,StoreType,Assortment,week,DayOfWeek) %>%
slice(1) %>%
ungroup() %>%
select(Store,StoreType,Assortment,week,DayOfWeek,naive_mean)
train.test <- train.test %>% arrange(Store,StoreType,Assortment,week,DayOfWeek)
train.test <- train.test %>% arrange(Store,StoreType,Assortment,week,DayOfWeek)
View(train.test)
# Import train.csv, test.csv and store.csv
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
test <- test %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
store <- store %>%
mutate(CompetitionOpenSinceMonth=ifelse(is.na(CompetitionOpenSinceMonth),median(CompetitionOpenSinceMonth,na.rm=T), CompetitionOpenSinceMonth),
CompetitionOpenSinceYear=ifelse(is.na(CompetitionOpenSinceYear),median(CompetitionOpenSinceYear,na.rm=T), CompetitionOpenSinceYear),
Promo2SinceYear=ifelse(is.na(Promo2SinceYear),0, Promo2SinceYear),
Promo2SinceWeek=ifelse(is.na(Promo2SinceWeek),0, Promo2SinceWeek))
train.df <- merge(train, store, by = "Store")
#calculate average sales by store-type-assort
train.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
train.avg.df <- train.df %>%
group_by(Store, StoreType, Assortment) %>%
slice(1) %>%
select(Store,StoreType,Assortment,store_avg) %>%
ungroup()
train.test <- left_join(test, train.avg.df)
train.df$Daily_mult <- train.df$Sales / train.df$store_avg
train.df[!is.finite(train.df$Daily_mult),]$Daily_mult <- NA
train.df <- train.df %>%
group_by(Store,StoreType,Assortment,week,DayOfWeek) %>%
mutate(naive_mean=mean(Sales, rm.na=T)) %>%
ungroup()
train.df <- train.df %>%
group_by(Store,StoreType,Assortment,week,DayOfWeek) %>%
mutate(naive_mean=mean(Sales, rm.na=T)) %>%
ungroup()
train_wm <- train.df %>%
group_by(Store,StoreType,Assortment,week,DayOfWeek) %>%
slice(1) %>%
ungroup() %>%
select(Store,StoreType,Assortment,week,DayOfWeek,naive_mean)
train.test <- train.test %>% arrange(Store,StoreType,Assortment,week,DayOfWeek)
train.test <- left_join(train.test,train_wm)
#all the ids are available in training data
table(is.na(train.test$naive_mean))
View(store)
# Import train.csv, test.csv and store.csv
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
table(is.na(train$Sales))
table(is.na(test$Sales))
table(is.na(train$Sales))
View(train)
table(is.na(train$Date))
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
test <- test %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)))
week_day <- c(train$week, train$DayOfWeek)
week_day <- c(train$week, train$DayOfWeek)
week_day <- unique(week_day)
week_day <- data.frame(id=week_day)
week_day$week_day <- factor(week_day$id)
View(week_day)
week_day <- c(train$week, train$DayOfWeek)
week_day <- data.frame(id=week_day)
week_day$week_day <- factor(week_day$id)
