View(test)
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
))
test <- test %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
))
week_day <- paste0(train$year, "W", train$week)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year == paste0(train$year, "W", train$week))
# Import train.csv, test.csv and store.csv
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(train$year, "W", train$week))
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
View(train)
View(train)
test <- test %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
train.df <- train %>%
group_by(Store, week_year) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
View(train.df)
train.df <- train.df %>%
group_by(Store, week_year) %>%
slice(1) %>%
select(Store,store_avg) %>%
ungroup()
train.df <- train.df %>%
group_by(Store, week_year) %>%
slice(1) %>%
select(week_year,Store,store_avg) %>%
ungroup()
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales.gr = store_avg / lag(store_avg) - 1
)
View(train.dy)
sales.daily_plot <- ggplot(data = train.dy,
mapping = aes(x = store_avg))
sales.daily_plot + geom_density()
sales.gr_plot <- ggplot(data = train.dy,
mapping = aes(x = sales.gr))
sales.gr_plot + geom_density()
train.df <- train %>%
group_by(Store, week_year) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
train.df <- train.df %>%
group_by(Store, week_year) %>%
slice(1) %>%
select(week_year,Store,store_avg,week) %>%
ungroup()
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales.gr = store_avg / lag(store_avg) - 1
)
ggplot(train.dy,aes(week,Sales)) +
geom_bar(stat = "identity")
ggplot(train.dy,aes(as.numeric(week),Sales)) +
geom_bar(stat = "identity")
View(train.dy)
as.numeric(train.dy$week)
ggplot(train.dy,aes(as.numeric(train.dy$week),Sales)) +
geom_bar(stat = "identity")
ggplot(train.dy,aes(as.numeric(week),store_avg)) +
geom_bar(stat = "identity")
ggplot(train.dy,aes(as.numeric(week),store_avg)) +
geom_bar(stat = "identity")
ggplot(train.dy,aes(as.numeric(week),sales.gr)) +
geom_bar(stat = "identity")
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)), weekM = isoweek(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)), weekM = isoweek(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)), weekM = epiweek(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
View(train)
View(train)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)), weekM = epiweek(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
test <- test %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)), weekM = isoweek(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
train.df <- train %>%
group_by(Store, week_year) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
train.df <- train.df %>%
group_by(Store, week_year) %>%
slice(1) %>%
select(week_year,Store,store_avg,week) %>%
ungroup()
View(train.df)
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales.gr = store_avg / lag(store_avg) - 1
)
View(train.dy)
plot <- train.dy %>%
ggplot(aes(y=store_avg, x=sales.gr, color=factor(as.number(week)))) +
labs(title="[Fiscal] Relationship Between Last Quarter Revenue and Revenue", x="Last Quarter Revenue", y="Revenue") +
geom_point()+
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
#Make the plot interactive
ggplotly(plot)  # No need to change this line
plot <- train.dy %>%
ggplot(aes(y=store_avg, x=sales.gr, color=factor(as.numeric(week)))) +
labs(title="[Fiscal] Relationship Between Last Quarter Revenue and Revenue", x="Last Quarter Revenue", y="Revenue") +
geom_point()+
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
#Make the plot interactive
ggplotly(plot)  # No need to change this line
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales_gr = store_avg / lag(store_avg) - 1,
sales_d = store_avg - lag(store_avg)
)
sales.weekly_plot <- ggplot(data = train.dy,
mapping = aes(x = store_avg))
sales.weekly_plot + geom_density()
sales_gr_plot <- ggplot(data = train.dy,
mapping = aes(x = sales_gr))
sales_gr_plot + geom_density()
sales_d_plot <- ggplot(data = train.dy,
mapping = aes(x = sales_d))
sales_d_plot + geom_density()
ggplot(train.dy,aes(as.numeric(week),store_avg)) +
geom_bar(stat = "identity")
ggplot(train.dy,aes(as.numeric(week),sales_gr)) +
geom_bar(stat = "identity")
ggplot(train.dy,aes(as.numeric(week),sales_d)) +
geom_bar(stat = "identity")
plot <- train.dy %>%
ggplot(aes(y=store_avg, x=sales_d, color=factor(as.numeric(week)))) +
labs(title="[Fiscal] Relationship Between Last Quarter Revenue and Revenue", x="Last Quarter Revenue", y="Revenue") +
geom_point()+
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
#Make the plot interactive
ggplotly(plot)  # No need to change this line
cor(train.dy[,c("store_avg","sales_gr","sales_d")],
use="complete.obs")
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales_gr = store_avg / lag(store_avg) - 1,
sales_d = store_avg - lag(store_avg),
na.rm =TRUE
)
y
cor(train.dy[,c("store_avg","sales_gr","sales_d")],
use="complete.obs")
cor(train.dy[,c("store_avg","sales_gr","sales_d")],
use="complete.obs", na.rm = TRUE)
cor(train.dy[,c("store_avg","sales_gr","sales_d")],
use="complete.obs")
cor(train.dy[,c("store_avg","sales_gr","sales_d")],
use="complete.obs")
cor(train.dy[,c("store_avg","sales_gr","sales_d")],
use="pairwise.complete.obs")
train.dy[mapply(is.infinite, train.dy)] <- NA
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales_gr = store_avg / lag(store_avg) - 1,
sales_d = store_avg - lag(store_avg)
)
train.dy[mapply(is.infinite, train.dy)] <- NA
cor(train.dy[,c("store_avg","sales_gr","sales_d")],
use="complete.obs")
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales_gr = store_avg / lag(store_avg) - 1,
sales_d = store_avg - lag(store_avg),
sales_yoy = store_avg/lag(store_avg,53) -1
)
train.dy[mapply(is.infinite, train.dy)] <- NA
sales_d_plot <- ggplot(data = train.dy,
mapping = aes(x = sales_yoy))
sales_d_plot + geom_density()
cor(train.dy[,c("store_avg","sales_gr","sales_d","sales_yoy")],
use="complete.obs")
multi_lag <- function(train.dy, lags, var, ext=""){
lag_names <- paste0(var,ext,lags)
lag_funs <- setNames(paste("dplyr::lag(.,",lags,")"), lag_names)
train.dy %>% group_by(Store) %>% mutate_at(vars(var), funs_(lag_funs)) %>% ungroup()
}
train.dy <- multi_lag(train.dy, 1:53, "sales_d")
train.dy <- multi_lag(train.dy, 1:53, "sales_gr")
train.dy <- multi_lag(train.dy, 0:53, "sales_d")
train.dy <- multi_lag(train.dy, 0:53, "sales_gr")
train.dy <- multi_lag(train.dy, 1:53, "sales_d")
train.dy <- multi_lag(train.dy, 1:53, "sales_gr")
cor(train.dy[,c(.~)],
cor(train.dy[,unlist(lapply(train.dy, is.numeric))],
use="complete.obs")
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales_gr = store_avg / lag(store_avg) - 1,
sales_d = store_avg - lag(store_avg),
sales_yoy = store_avg/lag(store_avg,53) -1
)
train.dy <- multi_lag(train.dy, 1:53, "store_avg")
cor(train.dy[,unlist(lapply(train.dy, is.numeric))],
use="complete.obs")
train.dy[mapply(is.infinite, train.dy)] <- NA
#####################################################################################33
# Import train.csv, test.csv and store.csv
train <- read.csv("train.csv", stringsAsFactors = F)
#####################################################################################33
# Import train.csv, test.csv and store.csv
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)), weekM = epiweek(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
test <- test %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)), weekM = isoweek(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
#calculate average sales by store-type-assort
train.df <- train %>%
group_by(Store, week_year) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
#select the first average sales data for each store-type-assort
train.df <- train.df %>%
group_by(Store, week_year) %>%
slice(1) %>%
select(week_year,Store,store_avg,week) %>%
ungroup()
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales_gr = store_avg / lag(store_avg) - 1,
sales_d = store_avg - lag(store_avg),
sales_yoy = store_avg/lag(store_avg,53) -1
)
multi_lag <- function(train.dy, lags, var, ext=""){
lag_names <- paste0(var,ext,lags)
lag_funs <- setNames(paste("dplyr::lag(.,",lags,")"), lag_names)
train.dy %>% group_by(Store) %>% mutate_at(vars(var), funs_(lag_funs)) %>% ungroup()
}
train.dy <- multi_lag(train.dy, 1:53, "store_avg")
train.dy <- multi_lag(train.dy, 1:53, "sales_d")
train.dy <- multi_lag(train.dy, 1:53, "sales_gr")
n
cor(train.dy[,unlist(lapply(train.dy, is.numeric))],
use="complete.obs")
# Import train.csv, test.csv and store.csv
train <- read.csv("train.csv", stringsAsFactors = F)
test <- read.csv("test.csv", stringsAsFactors = F)
store <- read.csv("store.csv", stringsAsFactors = F)
train <- train %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)), weekM = epiweek(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
test <- test %>%
mutate(week = week(as.Date(Date)), year = year(as.Date(Date)), weekM = isoweek(as.Date(Date)),
week = case_when(
week == 1 ~ "01",
week == 2 ~ "02",
week == 3 ~ "03",
week == 4 ~ "04",
week == 5 ~ "05",
week == 6 ~ "06",
week == 7 ~ "07",
week == 8 ~ "08",
week == 9 ~ "09",
week == week ~ as.character(week)
),
week_year = paste0(year, "W", week))
#cleaning of missing data in store.csv
store <- store %>%
mutate(CompetitionOpenSinceMonth=ifelse(is.na(CompetitionOpenSinceMonth),median(CompetitionOpenSinceMonth,na.rm=T), CompetitionOpenSinceMonth),
CompetitionOpenSinceYear=ifelse(is.na(CompetitionOpenSinceYear),median(CompetitionOpenSinceYear,na.rm=T), CompetitionOpenSinceYear),
Promo2SinceYear=ifelse(is.na(Promo2SinceYear),0, Promo2SinceYear),
Promo2SinceWeek=ifelse(is.na(Promo2SinceWeek),0, Promo2SinceWeek))
#calculate average sales by store-type-assort
train.df <- train %>%
group_by(Store, week_year) %>%
mutate(store_avg=mean(Sales, rm.na=T)) %>%
ungroup()
#select the first average sales data for each store, week_year
train.df <- train.df %>%
group_by(Store, week_year) %>%
slice(1) %>%
select(week_year,Store,store_avg,week) %>%
ungroup()
train.dy <-
train.df %>%
group_by(Store) %>%
mutate(
sales_gr = store_avg / lag(store_avg) - 1,
sales_d = store_avg - lag(store_avg),
sales_yoy = store_avg/lag(store_avg,53) -1
)
multi_lag <- function(train.dy, lags, var, ext=""){
lag_names <- paste0(var,ext,lags)
lag_funs <- setNames(paste("dplyr::lag(.,",lags,")"), lag_names)
train.dy %>% group_by(Store) %>% mutate_at(vars(var), funs_(lag_funs)) %>% ungroup()
}
corr_store_avg <- multi_lag(train.dy, 1:53, "store_avg")
corr_sales_d <- multi_lag(train.dy, 1:53, "sales_d")
corr_sales_gr <- multi_lag(train.dy, 1:53, "sales_gr")
View(corr_sales_gr)
corr_store_avg <- multi_lag(train.dy, 1:53, "store_avg")[,-c(1:7)]
View(corr_store_avg)
View(corr_store_avg)
corr_store_avg <- multi_lag(train.dy, 1:53, "store_avg")[,-c(1:7)]
corr_sales_d <- multi_lag(train.dy, 1:53, "sales_d")[,-c(1:7)]
corr_sales_gr <- multi_lag(train.dy, 1:53, "sales_gr")[,-c(1:7)]
